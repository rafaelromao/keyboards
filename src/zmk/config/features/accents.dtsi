/*
*
* Copyright (c) 2022 Rafael Rom√£o
* SPDX-License-Identifier: MIT
*
*/
/ {
    #define ACCENTED_KEY(NAME, KEY, DEAD_KEY) \
        NAME##_l: NAME##_l { \
            label = ZMK_MACRO_STRINGIFY(NAME##_l); \
            wait-ms = <0>; \
            tap-ms = <0>; \
            compatible = "zmk,behavior-macro"; \
            #binding-cells = <0>; \
            bindings \
                = <&macro_press &kp LALT> \
                , <&macro_tap &kp DEAD_KEY> \
                , <&macro_release &kp LALT> \
                , <&macro_tap &kp KEY> \
                ; \
        }; \
        NAME##_c: NAME##_c { \
            label = ZMK_MACRO_STRINGIFY(NAME##_c); \
            wait-ms = <0>; \
            tap-ms = <0>; \
            compatible = "zmk,behavior-macro"; \
            #binding-cells = <0>; \
            bindings \
                = <&macro_release &kp LSHFT> \
                , <&macro_press &kp LALT> \
                , <&macro_tap &kp DEAD_KEY> \
                , <&macro_release &kp LALT> \
                , <&macro_press &kp LSHFT> \
                , <&macro_tap &kp KEY> \
                , <&macro_release &kp LSHFT> \
                ; \
        }; \
        NAME: NAME { \
            label = ZMK_MACRO_STRINGIFY(NAME); \
            compatible = "zmk,behavior-mod-morph"; \
            #binding-cells = <0>; \
            bindings = <&NAME##_l>, <&NAME##_c>; \
            mods = <(MOD_LSFT|MOD_RSFT)>; \
            keep-mods = <(MOD_LSFT|MOD_RSFT)>; \
        };
    
    #define MACRO_KEY(NAME, BINDINGS) \
        NAME: NAME { \
			compatible = "zmk,behavior-macro"; \
            label = ZMK_MACRO_STRINGIFY(NAME); \
            #binding-cells = <0>; \
            wait-ms = <0>; \
            tap-ms = <0>; \
            bindings = <BINDINGS>; \
        };


    accents {
        ACCENTED_KEY(ac_agrv, A, GRAVE)
        ACCENTED_KEY(ac_aacu, A, E)
        ACCENTED_KEY(ac_atil, A, N)
        ACCENTED_KEY(ac_acir, A, I)
        ACCENTED_KEY(ac_eacu, E, E)
        ACCENTED_KEY(ac_ecir, E, I)
        ACCENTED_KEY(ac_iacu, I, E)
        ACCENTED_KEY(ac_oacu, O, E)
        ACCENTED_KEY(ac_otil, O, N)
        ACCENTED_KEY(ac_ocir, O, I)
        ACCENTED_KEY(ac_uacu, U, E)

        MACRO_KEY(mc_ced,   &macro_press &kp LALT &macro_tap &kp C &macro_release &kp LALT)
        MACRO_KEY(mc_ced_c, &macro_press &kp LALT &macro_tap &kp LS(C) &macro_release &kp LALT)
        MACRO_KEY(mc_qu,    &macro_tap &kp Q &macro_wait_time 10 &macro_tap &kp U)
        MACRO_KEY(mc_qu_c,  &macro_press &kp LSHFT &macro_tap &kp Q &macro_release &kp LSHFT &macro_wait_time 10 &macro_tap &kp U)
    };
};