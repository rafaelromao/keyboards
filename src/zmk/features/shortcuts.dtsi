/*
*
* Copyright (c) 2022 Rafael Rom√£o
* SPDX-License-Identifier: MIT
*
*/

/ {
    #define SHORTCUT(NAME, BINDINGS) \
        NAME: NAME { \
            compatible = "zmk,behavior-macro"; \
            #binding-cells = <0>; \
            wait-ms = <10>; \
            tap-ms = <10>; \
            bindings = <BINDINGS>; \
        };

    #define SHIFTED_SHORTCUT(NAME, UNSHIFTED, SHIFTED) \
        NAME: NAME { \
            compatible = "zmk,behavior-mod-morph"; \
            #binding-cells = <0>; \
            bindings = <UNSHIFTED>, <SHIFTED>; \
            mods = <(MOD_LSFT|MOD_RSFT)>; \
        };

    #define MORPHED_SHORTCUT(NAME, UNMORPHED, MORPHED, MODS) \
        NAME: NAME { \
            compatible = "zmk,behavior-mod-morph"; \
            #binding-cells = <0>; \
            bindings = <UNMORPHED>, <MORPHED>; \
            mods = <(MODS)>; \
        };

    #define MORPHED_SHORTCUT_KM(NAME, UNMORPHED, MORPHED, MODS) \
        NAME: NAME { \
            compatible = "zmk,behavior-mod-morph"; \
            #binding-cells = <0>; \
            bindings = <UNMORPHED>, <MORPHED>; \
            mods = <(MODS)>; \
            keep-mods = <(MODS)>; \
        };

    #define MODTAP_SHORTCUT(NAME, BINDINGS) \
         NAME: NAME { \
            compatible = "zmk,behavior-hold-tap"; \
            #binding-cells = <2>; \
            tapping-term-ms = <TAPPING_TERM>; \
            flavor = "tap-preferred"; \
            quick-tap-ms = <QUICK_TAP_TERM>; \
            require-prior-idle-ms = <QUICK_TAP_TERM>; \
            bindings = <&kp>, <BINDINGS>; \
        };

    #define TAPHOLD_SHORTCUT(NAME, TAP, HOLD) \
         NAME: NAME { \
            compatible = "zmk,behavior-hold-tap"; \
            #binding-cells = <2>; \
            tapping-term-ms = <TAPPING_TERM>; \
            flavor = "tap-preferred"; \
            quick-tap-ms = <QUICK_TAP_TERM>; \
            require-prior-idle-ms = <QUICK_TAP_TERM>; \
            bindings = <HOLD>, <TAP>; \
        };

    #define LAYERTAP_SHORTCUT(NAME, BINDINGS) \
         NAME: NAME { \
            compatible = "zmk,behavior-hold-tap"; \
            #binding-cells = <2>; \
            tapping-term-ms = <TAPPING_TERM>; \
            quick-tap-ms = <QUICK_TAP_TERM>; \
            require-prior-idle-ms = <QUICK_TAP_TERM>; \
            bindings = <&mo>, <BINDINGS>; \
        };
    
    shortcuts {
        
        // Romak

        SHORTCUT(mc_fullscr,                &macro_tap &kp LC(LG(F)))
        SHORTCUT(mc_find,                   &macro_tap &kp LG(F))
        SHORTCUT(mc_selall,                 &macro_tap &kp LG(A))
        SHORTCUT(mc_undo,                   &macro_tap &kp LG(Z))
        SHORTCUT(mc_copy,                   &macro_tap &kp LG(C))
        SHORTCUT(mc_selcopy,                &macro_tap &kp LG(A) &kp LG(C))
        SHORTCUT(mc_paste,                  &macro_tap &kp LG(V))
        SHORTCUT(mc_selpaste,               &macro_tap &kp LG(A) &kp LG(V))
        SHORTCUT(mc_save,                   &macro_tap &kp LG(S))
        SHORTCUT(mc_save_esc,               &macro_tap &kp LG(S) &kp ESC)
        SHORTCUT(mc_o_esc,                  &macro_tap &kp O &kp ESC)
        SHORTCUT(mc_sft_o_esc,              &macro_tap &kp LS(O) &kp ESC)
        SHORTCUT(mc_shift_tab,              &macro_tap &kp LS(TAB))

        SHORTCUT(mc_clip,                   &macro_tap &kp LC(LA(LS(N9))))
        SHORTCUT(mc_files,                  &macro_tap &kp LC(LA(LS(N8))))
        SHORTCUT(mc_windows,                &macro_tap &kp LC(LA(LS(N7))))
        SHORTCUT(mc_zoom_out,               &macro_tap &kp LC(LA(LS(N6))))
        SHORTCUT(mc_zoom_in,                &macro_tap &kp LC(LA(LS(N5))))
        SHORTCUT(mc_tabs,                   &macro_tap &kp LC(LA(LS(N4))))
        SHORTCUT(mc_preview,                &macro_tap &kp LC(LA(LS(N3))))
        SHORTCUT(mc_calc,                   &macro_tap &kp LC(LA(LS(N2))))
        SHORTCUT(mc_apps,                   &macro_tap &kp LC(LA(LS(N1))))
        SHORTCUT(mc_reset_zoom,             &macro_tap &kp LC(LA(LS(N0))))
        SHORTCUT(mc_emoji,                  &macro_tap &kp LC(LA(LS(MINUS))))
        SHORTCUT(mc_pomodoro,               &macro_tap &kp LC(LA(LS(PLUS))))

        SHORTCUT(mc_cam,                    &macro_tap &kp LG(LC(LA(LS(N0)))))
        SHORTCUT(mc_reopen,                 &macro_tap &kp LG(LC(LA(LS(N1)))))
        SHORTCUT(mc_refresh,                &macro_tap &kp LG(LC(LA(LS(N2)))))
        SHORTCUT(mc_close,                  &macro_tap &kp LG(LC(LA(LS(N3)))))
        SHORTCUT(mc_mic,                    &macro_tap &kp LG(LC(LA(LS(N4)))))
        SHORTCUT(mc_shortcat,               &macro_tap &kp LG(LC(LA(LS(N5)))))
        SHORTCUT(mc_hand,                   &macro_tap &kp LG(LC(LA(LS(N7)))))

        SHORTCUT(mc_meh_b,                  &macro_tap &kp LC(LA(LS(B))))
        SHORTCUT(mc_meh_m,                  &macro_tap &kp LC(LA(LS(M))))
        SHORTCUT(mc_meh_g,                  &macro_tap &kp LC(LA(LS(G))))
        SHORTCUT(mc_meh_l,                  &macro_tap &kp LC(LA(LS(L))))
        SHORTCUT(mc_meh_o,                  &macro_tap &kp LC(LA(LS(O))))
        SHORTCUT(mc_meh_u,                  &macro_tap &kp LC(LA(LS(U))))
        SHORTCUT(mc_meh_n,                  &macro_tap &kp LC(LA(LS(N))))
        SHORTCUT(mc_meh_s,                  &macro_tap &kp LC(LA(LS(S))))
        SHORTCUT(mc_meh_t,                  &macro_tap &kp LC(LA(LS(T))))
        SHORTCUT(mc_meh_r,                  &macro_tap &kp LC(LA(LS(R))))
        SHORTCUT(mc_meh_a,                  &macro_tap &kp LC(LA(LS(A))))
        SHORTCUT(mc_meh_e,                  &macro_tap &kp LC(LA(LS(E))))
        SHORTCUT(mc_meh_f,                  &macro_tap &kp LC(LA(LS(F))))
        MODTAP_SHORTCUT(th_meh_f,           &mc_meh_f)
        SHORTCUT(mc_meh_c,                  &macro_tap &kp LC(LA(LS(C))))
        MODTAP_SHORTCUT(th_meh_c,           &mc_meh_c)
        SHORTCUT(mc_meh_p,                  &macro_tap &kp LC(LA(LS(P))))
        MODTAP_SHORTCUT(th_meh_p,           &mc_meh_p)
        SHORTCUT(mc_meh_h,                  &macro_tap &kp LC(LA(LS(H))))
        MODTAP_SHORTCUT(th_meh_h,           &mc_meh_h)
        SHORTCUT(mc_meh_comma,              &macro_tap &kp LC(LA(LS(COMMA))))
        MODTAP_SHORTCUT(th_meh_comm,        &mc_meh_comma)
        SHORTCUT(mc_meh_dot,                &macro_tap &kp LC(LA(LS(DOT))))
        MODTAP_SHORTCUT(th_meh_dot,         &mc_meh_dot)
        SHORTCUT(mc_meh_w,                  &macro_tap &kp LC(LA(LS(W))))
        SHORTCUT(mc_meh_v,                  &macro_tap &kp LC(LA(LS(V))))
        SHORTCUT(mc_meh_z,                  &macro_tap &kp LC(LA(LS(Z))))
        SHORTCUT(mc_meh_j,                  &macro_tap &kp LC(LA(LS(J))))
        SHORTCUT(mc_meh_q,                  &macro_tap &kp LC(LA(LS(Q))))
        SHORTCUT(mc_meh_k,                  &macro_tap &kp LC(LA(LS(K))))
        SHORTCUT(mc_meh_x,                  &macro_tap &kp LC(LA(LS(X))))
        SHORTCUT(mc_meh_y,                  &macro_tap &kp LC(LA(LS(Y))))
        SHORTCUT(mc_meh_d,                  &macro_tap &kp LC(LA(LS(D))))
        SHORTCUT(mc_meh_i,                  &macro_tap &kp LC(LA(LS(I))))
        LAYERTAP_SHORTCUT(th_plain1,        &tc_smart_plain1)

        // Macros

        SHORTCUT(mc_lock,                   &macro_tap &kp LC(LG(Q)))

        SHORTCUT(mc_sc_nav,                 &macro_press &kp LSHFT &kp LCTL &mo NAV &macro_pause_for_release &macro_release &mo NAV &kp LSHFT &kp LCTL)
        SHORTCUT(mc_ca_nav,                 &macro_press &kp LCTL &kp LALT &mo NAV &macro_pause_for_release &macro_release &mo NAV &kp LCTL &kp LALT)
        SHORTCUT(mc_gca_nav,                &macro_press &kp LGUI &kp LCTL &kp LALT &mo NAV &macro_pause_for_release &macro_release &mo NAV &kp LGUI &kp LCTL &kp LALT)
        SHORTCUT(mc_sca_nav,                &macro_press &kp LSHFT &kp LCTL &kp LALT &mo NAV &macro_pause_for_release &macro_release &mo NAV &kp LSHFT &kp LCTL &kp LALT)

        // Navigation

        SHORTCUT(mc_lshift_lshift,          &macro_tap &kp LSHFT &kp LSHFT)
        SHORTCUT(mc_lctrl_lctrl,            &macro_tap &kp LCTRL &kp LCTRL)
        SHORTCUT(mc_lalt_lalt,              &macro_tap &kp LALT &kp LALT)
        SHORTCUT(mc_ralt_ralt,              &macro_tap &kp RALT &kp RALT)
        SHORTCUT(mc_lgui_lgui,              &macro_tap &kp LGUI &kp LGUI)

        SHORTCUT(mc_up_end_del,             &macro_tap &kp UP &kp END &kp DEL)
        SHORTCUT(mc_down_home,              &macro_tap &kp DOWN &kp HOME)
        SHORTCUT(mc_down_end,               &macro_tap &kp DOWN &kp END)
        SHORTCUT(mc_word_start,             &macro_tap &kp LA(LEFT))
        SHORTCUT(mc_word_next,              &macro_tap &kp LA(RIGHT) &kp LEFT)
        SHORTCUT(mc_word_end,               &macro_tap &kp LA(RIGHT) &kp LA(RIGHT) &kp LA(LEFT))
        SHORTCUT(mc_del_word,               &macro_press &kp LA(BACKSPACE) &macro_pause_for_release &macro_release &kp LA(BACKSPACE))

   };
};
