/*
*
* Copyright (c) 2022 Rafael Rom√£o
* SPDX-License-Identifier: MIT
*
*/

/ {
    #define SHORTCUT(NAME, BINDINGS) \
        NAME: NAME { \
            compatible = "zmk,behavior-macro"; \
            #binding-cells = <0>; \
            wait-ms = <10>; \
            tap-ms = <10>; \
            bindings = <BINDINGS>; \
        };

    #define SHIFTED_SHORTCUT(NAME, UNSHIFTED, SHIFTED) \
        NAME: NAME { \
            compatible = "zmk,behavior-mod-morph"; \
            #binding-cells = <0>; \
            bindings = <UNSHIFTED>, <SHIFTED>; \
            mods = <(MOD_LSFT|MOD_RSFT)>; \
        };

    #define MORPHED_SHORTCUT(NAME, UNMORPHED, MORPHED, MODS) \
        NAME: NAME { \
            compatible = "zmk,behavior-mod-morph"; \
            #binding-cells = <0>; \
            bindings = <UNMORPHED>, <MORPHED>; \
            mods = <(MODS)>; \
        };

    #define MORPHED_SHORTCUT_KM(NAME, UNMORPHED, MORPHED, MODS) \
        NAME: NAME { \
            compatible = "zmk,behavior-mod-morph"; \
            #binding-cells = <0>; \
            bindings = <UNMORPHED>, <MORPHED>; \
            mods = <(MODS)>; \
            keep-mods = <(MODS)>; \
        };

    #define MODTAP_SHORTCUT(NAME, BINDINGS) \
         NAME: NAME { \
            compatible = "zmk,behavior-hold-tap"; \
            #binding-cells = <2>; \
            tapping-term-ms = <TAPPING_TERM>; \
            flavor = "tap-preferred"; \
            quick-tap-ms = <QUICK_TAP_TERM>; \
            require-prior-idle-ms = <QUICK_TAP_TERM>; \
            bindings = <&kp>, <BINDINGS>; \
        };

    #define TAPHOLD_SHORTCUT(NAME, TAP, HOLD) \
         NAME: NAME { \
            compatible = "zmk,behavior-hold-tap"; \
            #binding-cells = <2>; \
            tapping-term-ms = <TAPPING_TERM>; \
            flavor = "tap-preferred"; \
            quick-tap-ms = <QUICK_TAP_TERM>; \
            require-prior-idle-ms = <QUICK_TAP_TERM>; \
            bindings = <HOLD>, <TAP>; \
        };

    #define LAYERTAP_SHORTCUT(NAME, BINDINGS) \
         NAME: NAME { \
            compatible = "zmk,behavior-hold-tap"; \
            #binding-cells = <2>; \
            tapping-term-ms = <TAPPING_TERM>; \
            quick-tap-ms = <QUICK_TAP_TERM>; \
            require-prior-idle-ms = <QUICK_TAP_TERM>; \
            bindings = <&lt>, <BINDINGS>; \
        };
    
    shortcuts {
        
        // Romak

        SHORTCUT(mc_fullscr,                &macro_tap &kp LC(LG(F)))
        SHORTCUT(mc_find,                   &macro_tap &kp LG(F))
        SHORTCUT(mc_selall,                 &macro_tap &kp LG(A))
        SHORTCUT(mc_undo,                   &macro_tap &kp LG(Z))
        SHORTCUT(mc_copy,                   &macro_tap &kp LG(C))
        SHORTCUT(mc_selcopy,                &macro_tap &kp LG(A) &kp LG(C))
        SHORTCUT(mc_paste,                  &macro_tap &kp LG(V))
        SHORTCUT(mc_selpaste,               &macro_tap &kp LG(A) &kp LG(V))
        SHORTCUT(mc_save,                   &macro_tap &kp LG(S))
        SHORTCUT(mc_save_esc,               &macro_tap &kp LG(S) &kp ESC)
        SHORTCUT(mc_o_esc,                  &macro_tap &kp O &kp ESC)
        SHORTCUT(mc_sft_o_esc,              &macro_tap &kp LS(O) &kp ESC)
        SHORTCUT(mc_shift_tab,              &macro_tap &kp LS(TAB))

        SHORTCUT(mc_cam,                    &macro_tap &kp LC(LA(LS(V))))
        SHORTCUT(mc_mic,                    &macro_tap &kp LC(LA(LS(A))))
        SHORTCUT(mc_preview,                &macro_tap &kp LC(LA(LS(P))))
        SHORTCUT(mc_clip,                   &macro_tap &kp LC(LA(LS(S))))
        SHORTCUT(mc_tabs,                   &macro_tap &kp LC(LA(LS(B))))
        SHORTCUT(mc_files,                  &macro_tap &kp LC(LA(LS(F))))
        SHORTCUT(mc_calc,                   &macro_tap &kp LC(LA(LS(C))))
        SHORTCUT(mc_term,                   &macro_tap &kp LC(LA(LS(T))))
        MODTAP_SHORTCUT(th_tabs,            &mc_tabs)

        // Macros

        SHORTCUT(mc_shift,                  &sk LSHFT)

        SHORTCUT(mc_down,                   &macro_tap &kp DOWN)
        SHORTCUT(mc_complete,               &macro_tap &kp LS(LG(ENTER)))
        SHIFTED_SHORTCUT(mm_down,           &mc_down, &mc_complete)

        SHORTCUT(mc_breakpoint,             &macro_tap &kp LG(F8))
        SHORTCUT(mc_view_breakpoints,       &macro_tap &kp LG(LS(F8)))
        SHIFTED_SHORTCUT(mm_break,          &mc_breakpoint, &mc_view_breakpoints)

        SHORTCUT(mc_step_over,              &macro_tap &kp F8)
        SHORTCUT(mc_evaluate,               &macro_tap &kp LA(F8))
        SHIFTED_SHORTCUT(mm_step_over,      &mc_step_over, &mc_breakpoint)

        SHORTCUT(mc_step_into,              &macro_tap &kp F7)
        SHORTCUT(mc_step_out,               &macro_tap &kp LS(F8))
        SHIFTED_SHORTCUT(mm_step_into,      &mc_step_into, &mc_step_out)
        LAYERTAP_SHORTCUT(th_step_into,     &mm_step_into)

        SHORTCUT(mc_actions,                &macro_tap &kp LA(ENTER))
        SHORTCUT(mc_generate,               &macro_tap &kp LG(N))
        SHIFTED_SHORTCUT(mm_actions,        &mc_actions, &mc_generate)

        SHORTCUT(mc_typematch,              &macro_tap &kp LS(LC(SPACE)))
        SHORTCUT(mc_autocomp,               &macro_tap &kp LC(SPACE))
        SHIFTED_SHORTCUT(mm_typematch,      &mc_typematch, &mc_autocomp)

        SHORTCUT(mc_docs,                   &macro_tap &kp F1)
        SHORTCUT(mc_params,                 &macro_tap &kp LG(P))
        SHIFTED_SHORTCUT(mm_docs,           &mc_docs, &mc_params)

        SHORTCUT(mc_find_symbol,            &macro_tap &kp LA(LG(O)))
        SHORTCUT(mc_find_action,            &macro_tap &kp LS(LG(A)))
        SHIFTED_SHORTCUT(mm_find,           &mc_find_symbol, &mc_find_action)
        MODTAP_SHORTCUT(th_find,            &mm_find)

        SHORTCUT(mc_run,                    &macro_tap &kp LC(R))
        SHORTCUT(mc_stop,                   &macro_tap &kp LG(F2))
        SHIFTED_SHORTCUT(mm_run,            &mc_run, &mc_stop)

        SHORTCUT(mc_debug,                  &macro_tap &kp LC(D))
        SHORTCUT(mc_resume,                 &macro_tap &kp LA(LG(R)))
        SHIFTED_SHORTCUT(mm_debug,          &mc_debug, &mc_resume)

        SHORTCUT(mc_build,                  &macro_tap &kp LG(F9))
        SHORTCUT(mc_rebuild,                &macro_tap &kp LS(LG(F9)))
        SHIFTED_SHORTCUT(mm_build,          &mc_build, &mc_rebuild)

        SHORTCUT(mc_project,                &macro_tap &kp LG(N1))
        SHORTCUT(mc_select_in,              &macro_tap &kp LA(F1))
        SHIFTED_SHORTCUT(mm_project,        &mc_project, &mc_select_in)

        SHORTCUT(mc_recent,                 &macro_tap &kp LG(E))
        SHORTCUT(mc_prev_err,               &macro_tap &kp LS(F2))
        SHIFTED_SHORTCUT(mm_recent,         &mc_select_in, &mc_prev_err)

        SHORTCUT(mc_swapper,                &macro_tap &kp LC(TAB))
        SHORTCUT(mc_next_err,               &macro_tap &kp F2)
        SHIFTED_SHORTCUT(mm_swapper,        &mc_swapper, &mc_next_err)

        SHORTCUT(mc_usages,                 &macro_tap &kp LG(LA(F7)))
        SHORTCUT(mc_quick_def,              &macro_tap &kp LA(SPACE))
        SHIFTED_SHORTCUT(mm_usages,         &mc_usages, &mc_quick_def)

        SHORTCUT(mc_refac,                  &macro_tap &kp LC(T))
        SHORTCUT(mc_reformat,               &macro_tap &kp LG(LA(L)))
        SHIFTED_SHORTCUT(mm_refac,          &mc_refac, &mc_reformat)

        SHORTCUT(mc_selw,                   &macro_tap &kp LA(LEFT) &kp LA(RIGHT) \
                                            &macro_press &kp LA(LS(LEFT)) \
                                            &macro_pause_for_release \
                                            &macro_release &kp LA(LS(LEFT)) \
                                            &macro_tap &sl SHORTCUTS_EXT)
        
        SHORTCUT(mc_seln,                   &macro_tap &kp HOME &kp HOME \
                                            &macro_press &kp LS(DOWN) \
                                            &macro_pause_for_release \
                                            &macro_release &kp LS(DOWN) \
                                            &macro_tap &sl SHORTCUTS_EXT)
        
        SHORTCUT(mc_ext_sel,                &macro_press &key_repeat \
                                            &macro_pause_for_release \
                                            &macro_release &key_repeat \
                                            &macro_tap &sl SHORTCUTS_EXT)
        MODTAP_SHORTCUT(th_ext_sel,         &mc_ext_sel)

        SHORTCUT(mc_zout,                   &macro_tap &kp LG(MINUS))
        SHORTCUT(mc_zin,                    &macro_tap &kp LG(PLUS))
        
        SHORTCUT(mc_z0,                     &macro_tap &kp LG(N0))
        SHORTCUT(mc_refresh,                &macro_tap &kp LG(R))
        SHORTCUT(mc_close_tab,              &macro_tap &kp LG(W))

        MORPHED_SHORTCUT(mm_ref_z0,         &mc_refresh, &mc_z0, MOD_RGUI)
        TAPHOLD_SHORTCUT(ht_ref_clo_z0,     &mm_ref_z0, &mc_close_tab)
        
        SHORTCUT(mc_app_swapper,            &macro_press &mo SHORTCUTS_EXT &macro_tap &sw_win_s &kp TAB &macro_pause_for_release &macro_release &mo SHORTCUTS_EXT)
        SHORTCUT(mc_app_quit,               &macro_tap &kp Q)
        MORPHED_SHORTCUT_KM(mm_down_minus,  &kp DOWN, &kp MINUS, MOD_RGUI)
        MORPHED_SHORTCUT_KM(mm_up_plus,     &kp UP, &kp PLUS, MOD_RGUI)

        SHORTCUT(mc_sleep,                  &macro_press &kp C_SLEEP &macro_pause_for_release &macro_release &kp C_SLEEP &macro_tap &kp LC(LG(Q)))

        SHORTCUT(mc_comment,                &macro_tap &kp LG(SLASH))
        SHORTCUT(mc_escc,                   &macro_tap &kp ESC &to ALPHA1)
        SHORTCUT(mc_dqt0p,                  &macro_tap &kp DQT &kp N0 &kp P)

        SHORTCUT(mc_delword,                &macro_tap &kp LA(BACKSPACE))
        SHORTCUT(mc_joinwords,              &macro_tap &kp LA(LEFT) &kp BACKSPACE &kp LA(RIGHT))

        SHORTCUT(mc_sc_nav,                 &macro_press &kp LSHFT &kp LCTL &mo NAV &macro_pause_for_release &macro_release &mo NAV &kp LSHFT &kp LCTL)
        SHORTCUT(mc_cg_nav,                 &macro_press &kp LCTL &kp LGUI &mo NAV &macro_pause_for_release &macro_release &mo NAV &kp LCTL &kp LGUI)
        SHORTCUT(mc_ag_nav,                 &macro_press &kp RALT &kp LGUI &mo NAV &macro_pause_for_release &macro_release &mo NAV &kp RALT &kp LGUI)
   };
};
