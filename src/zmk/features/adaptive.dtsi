/*
*
* Copyright (c) 2022 Rafael Rom√£o
* SPDX-License-Identifier: MIT
*
*/

/ {
    magic {
        
        // ******************** REPEAT KEY ******************** //

        MACRO(mc_bs_h, &kp BACKSPACE &kp H)
        MACRO(mc_bs_v, &kp BACKSPACE &kp V)
        MACRO(mc_bs_c_h, &kp BACKSPACE &kp RS(H))
        MACRO(mc_bs_s_h, &kp BACKSPACE &kp LS(H))
        MACRO(mc_bs_c_v, &kp BACKSPACE &kp RS(V))
        MACRO(mc_bs_s_v, &kp BACKSPACE &kp LS(V))
        
        alternate_repeat_key: alternate_repeat_key {
            compatible = "zmk,behavior-adaptive-key";
            #binding-cells = <0>;
            bindings = <&key_repeat>;

            ADAPTIVE(a_h      , &kp H       , A          )
            ADAPTIVE(a_h_s    , &kp LS(H)   , LS(A)      )
            ADAPTIVE(a_h_c    , &kp RS(H)   , RS(A)      )
            ADAPTIVE(i_sqo_s  , &mc_sqo     , LS(I)      )
            ADAPTIVE(i_sqo_c  , &mc_sqo     , RS(I)      )
            ADAPTIVE(space_v  , &kp V       , SPACE      )
            ADAPTIVE(j_aacu   , &ac_aacu    , J          )
            ADAPTIVE(j_aacu_s , &ac_aacu_s  , LS(J)      )
            ADAPTIVE(j_aacu_c , &ac_aacu_c  , RS(J)      )
            ADAPTIVE(y_d      , &kp D       , Y          )
            ADAPTIVE(y_d_s    , &kp LS(D)   , LS(Y)      )
            ADAPTIVE(y_d_c    , &kp RS(D)   , RS(Y)      )
            ADAPTIVE(x_iacu   , &ac_iacu    , X          )
            ADAPTIVE(x_iacu_s , &ac_iacu_s  , LS(X)      )
            ADAPTIVE(x_iacu_c , &ac_iacu_c  , RS(X)      )
            ADAPTIVE(h_v      , &mc_bs_v    , H          )
            ADAPTIVE(h_v_s    , &mc_bs_s_v  , LS(H)      )
            ADAPTIVE(h_v_c    , &mc_bs_c_v  , RS(H)      )
            ADAPTIVE(v_h      , &mc_bs_h    , V          )
            ADAPTIVE(v_h_s    , &mc_bs_s_h  , LS(V)      )
            ADAPTIVE(v_h_c    , &mc_bs_c_h  , RS(V)      )
        };

        // Alt repeat key for accented vowels and macros from the secondary alpha layer. Only the last char in the macro is considered
        a2_alt_repeat: alpha2_alternate_repeat_key {
            compatible = "zmk,behavior-adaptive-key";
            #binding-cells = <0>;
            bindings = <&alternate_repeat_key>;

            ADAPTIVE(aeo_x    , &kp X      , A E O             )
            ADAPTIVE(aeo_x_s  , &kp LS(X)  , LS(A) RS(A) LS(E) )
            ADAPTIVE(aeo_x_c  , &kp RS(X)  , RS(E) LS(O) RS(O) )
            ADAPTIVE(i_e      , &kp E      , I                 )
            ADAPTIVE(i_e_s    , &kp LS(E)  , LS(I)             )
            ADAPTIVE(i_e_c    , &kp RS(E)  , RS(I)             )
            ADAPTIVE(u_ecir   , &ac_ecir   , U                 )
            ADAPTIVE(u_ecir_s , &ac_ecir_s , LS(U)             )
            ADAPTIVE(u_ecir_c , &ac_ecir_c , RS(U)             )
        };

        ht_repeat: ht_repeat {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&mo>, <&mm_repeat>;
        };

        // ******************** MAGIC KEY ******************** //

        magic_key: magic_key {
            compatible = "zmk,behavior-adaptive-key";
            #binding-cells = <0>;
            bindings = <&kp H>;

            ADAPTIVE(v      , &kp V      , A     E     I     O     U     )
            ADAPTIVE(v_s    , &kp LS(V)  , LS(A) LS(E) LS(I) LS(O) LS(U) )
        };

        magic_key_c: magic_key_c {
            compatible = "zmk,behavior-adaptive-key";
            #binding-cells = <0>;
            bindings = <&kp RS(H)>;

            ADAPTIVE(v_c    , &kp RS(V)  , RS(A) RS(E) RS(I) RS(O) RS(U) )
        };

        ht_magic: ht_magic {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&kp>, <&magic_key>;
        };

        ht_magic_c: ht_magic_c {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&kp>, <&magic_key_c>;
        };

        // ******************** REVERSED MAGIC KEY ******************** //

        reversed_magic: reversed_magic {
            compatible = "zmk,behavior-adaptive-key";
            #binding-cells = <0>;
            bindings = <&kp V>;

            ADAPTIVE(h      , &kp H      , A     E     I     O     U     )
            ADAPTIVE(h_s    , &kp LS(H)  , LS(A) LS(E) LS(I) LS(O) LS(U) )
        };

        reversed_magic_c: reversed_magic_c {
            compatible = "zmk,behavior-adaptive-key";
            #binding-cells = <0>;
            bindings = <&kp V>;

            ADAPTIVE(h_c    , &kp RS(H)  , RS(A) RS(E) RS(I) RS(O) RS(U) )
        };

    };
};