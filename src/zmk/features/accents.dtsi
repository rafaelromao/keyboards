/*
*
* Copyright (c) 2022 Rafael Rom√£o
* SPDX-License-Identifier: MIT
*
*/

/ {
    #define ACCENTED_KEY(NAME, KEY, DEAD_KEY) \
        NAME: NAME { \
            wait-ms = <0>; \
            tap-ms = <0>; \
            compatible = "zmk,behavior-macro"; \
            #binding-cells = <0>; \
            bindings \
                = <&macro_press &kp LALT> \
                , <&macro_tap &kp DEAD_KEY> \
                , <&macro_release &kp LALT> \
                , <&macro_tap &kp KEY> \
                ; \
        }; \
        NAME##_c: NAME##_c { \
            wait-ms = <0>; \
            tap-ms = <0>; \
            compatible = "zmk,behavior-macro"; \
            #binding-cells = <0>; \
            bindings \
                = <&macro_release &kp LSHFT> \
                , <&macro_press &kp LALT> \
                , <&macro_tap &kp DEAD_KEY> \
                , <&macro_release &kp LALT> \
                , <&macro_press &kp LSHFT> \
                , <&macro_tap &kp KEY> \
                , <&macro_release &kp LSHFT> \
                ; \
        }; \
        NAME##_s: NAME##_s { \
            wait-ms = <0>; \
            tap-ms = <0>; \
            compatible = "zmk,behavior-macro"; \
            #binding-cells = <0>; \
            bindings \
                = <&macro_release &kp LSHFT> \
                , <&macro_press &kp LALT> \
                , <&macro_tap &kp DEAD_KEY> \
                , <&macro_release &kp LALT> \
                , <&macro_press &kp LSHFT> \
                , <&macro_tap &kp KEY> \
                , <&macro_release &kp LSHFT> \
                ; \
        }; \
    
    #define MACRO_KEY(NAME, BINDINGS) \
        NAME: NAME { \
			compatible = "zmk,behavior-macro"; \
            #binding-cells = <0>; \
            wait-ms = <0>; \
            tap-ms = <0>; \
            bindings = <BINDINGS>; \
        };


    accents {
        ACCENTED_KEY(ac_agrv, A, GRAVE)
        ACCENTED_KEY(ac_aacu, A, E    )
        ACCENTED_KEY(ac_atil, A, N    )
        ACCENTED_KEY(ac_acir, A, I    )
        ACCENTED_KEY(ac_eacu, E, E    )
        ACCENTED_KEY(ac_ecir, E, I    )
        ACCENTED_KEY(ac_iacu, I, E    )
        ACCENTED_KEY(ac_oacu, O, E    )
        ACCENTED_KEY(ac_otil, O, N    )
        ACCENTED_KEY(ac_ocir, O, I    )
        ACCENTED_KEY(ac_uacu, U, E    )

        MACRO_KEY(mc_ced,   &kp C_CEDIL &sl CCEDIL)
        MACRO_KEY(mc_ced_c, &kp LS(C_CEDIL) &sl CASE_CCEDIL)
        MACRO_KEY(mc_ced_s, &kp RS(C_CEDIL) &sl CCEDIL)
        MACRO_KEY(mc_qu,    &macro_tap &kp Q &macro_wait_time 10 &macro_tap &kp U)
        MACRO_KEY(mc_qu_c,  &macro_press &kp LSHFT &macro_tap &kp Q &macro_wait_time 10 &macro_tap &kp U &macro_release &kp LSHFT)
        MACRO_KEY(mc_qu_s,  &macro_press &kp LSHFT &macro_tap &kp Q &macro_wait_time 10 &macro_release &kp LSHFT &macro_tap &kp U)
        MACRO_KEY(mc_aotil,    &macro_tap &macro_wait_time 10 &macro_tap &ac_atil &kp O)
        MACRO_KEY(mc_aotil_c,  &macro_tap &macro_wait_time 10 &macro_tap &ac_atil_c &kp LS(O))
        MACRO_KEY(mc_otiles,   &macro_tap &ac_otil &macro_wait_time 10 &kp E &kp S)
        MACRO_KEY(mc_otiles_c, &macro_tap &ac_otil_c &macro_wait_time 10 &kp LS(E) &kp LS(S))
    };
};