/*
*
* Copyright (c) 2022 Rafael Romão
* SPDX-License-Identifier: MIT
*
*/

/*                KEY POSITIONS

  ╭─────────────────────╮ ╭─────────────────────╮
  │ LTP LTR LTM LTI     │ │     RTI RTM RTR RTP │
  │ LHP LHR LHM LHI LHC │ │ RHC RHI RHM RHR RHP │
  │     LBR LBM LBI LBC │ │ RBC RBI RBM RBR     │
  ╰───────╮     L1  L0  │ │ R0  R1      ╭───────╯
          ╰─────────────╯ ╰─────────────╯ */

/ {
    #define SMARTCASE_LAYERS            CAMEL_CASE SNAKE_CASE CONST_CASE KEBAB_CASE SLASH_CASE SPACING 
    #define ALPHA1_LAYERS               ALPHA1 CASE_A1 PLAIN1 CPLK_A1 SMARTCASE_LAYERS ALTREP2
    #define CCEDIL_LAYERS               CCEDIL CASE_CCEDIL 
    #define ALPHA2_LAYERS               ALPHA2 CASE_A2 PLAIN2 SFT_A2
    #define LOWER_LAYERS                LOWER LOW_CP  
    #define RAISE_LAYERS                RAISE RAI_CP   
    #define SHORTCUT_LAYERS             SHORTCUTS MEHS  
    #define NAV_LAYERS                  NAV NAV_F
    #define ALL_LAYERS                  ALPHA1_LAYERS ALPHA2_LAYERS CCEDIL_LAYERS LOWER_LAYERS SHORTCUT_LAYERS NAV_LAYERS RAISE_LAYERS MEDIA TEXT SYSTEM
    #define ALL_LAYERS_WITH_BACKSPACE   ALPHA1_LAYERS ALPHA2_LAYERS CCEDIL_LAYERS LOWER_LAYERS SHORTCUT_LAYERS NAV_LAYERS RAISE_LAYERS       TEXT         
    #define ALL_LAYERS_WITH_ESC         ALPHA1_LAYERS ALPHA2_LAYERS CCEDIL_LAYERS              SHORTCUT_LAYERS NAV_LAYERS              MEDIA        
    #define FIXABLE_LAYERS              CPLK_A1 CASE_A1 SMARTCASE_LAYERS PLAIN1 LOWER_LAYERS MEDIA NAV_LAYERS MEHS FUN

    combos {
        compatible = "zmk,combos";

        COMBO(cb_backspace,     RTM RTR,         &kp BACKSPACE,          ALL_LAYERS_WITH_BACKSPACE)
        COMBO(cb_esc,           LTR LTM,         &kp ESC,                ALL_LAYERS_WITH_ESC)

        COMBO(cb_boot_l,        LTR LBI,         &bootloader,            ALL_LAYERS)
        COMBO(cb_boot_r,        RTR RBI,         &bootloader,            ALL_LAYERS)
        COMBO(cb_alpha1,        RTM RTR RTI,     &to ALPHA1,             FIXABLE_LAYERS)
        COMBO(cb_cancel,        RTM RTR RTI,     &kp K_CANCEL,           FIXABLE_LAYERS)

        COMBO(cb_save,          LHR LHM L0,      &mc_save,               ALL_LAYERS)
        COMBO(cb_fullscr,       LHM LHI L0,      &mc_fullscr,            ALL_LAYERS)
        COMBO(cb_find,           LBM LBI L0,      &mc_find,                ALL_LAYERS)
        COMBO(cb_undo,          LBR LBM L0,      &mc_undo,               ALL_LAYERS)
        COMBO(cb_enter,         RHM RHR R0,      &kp ENTER,              ALL_LAYERS)
        COMBO(cb_tab,           RTM RTR R0,      &kp TAB,                ALL_LAYERS)
        COMBO(cb_paste,         RBI RBM R0,      &mc_paste,              ALL_LAYERS)
        COMBO(cb_copy,          RHI RHM R0,      &mc_copy,               ALL_LAYERS)
        COMBO(cb_selall,        RBM RBR R0,      &mc_selall,             ALL_LAYERS)
        COMBO(cb_selcopy,       RHI RHM RHR R0,  &mc_selcopy,            ALL_LAYERS)
        COMBO(cb_selpaste,      RBI RBM RBR R0,  &mc_selpaste,           ALL_LAYERS)

        COMBO(cb_numword,       LBR LBM,         &ht_num_word NAV 0,     ALPHA1_LAYERS)
        COMBO(cd_ca_nav,        LHR LHM L1,      &mc_ca_nav,             ALPHA1_LAYERS)
        COMBO(cd_gcs_nav,       LBR LHM LHI L1,  &mc_gcs_nav,            ALPHA1_LAYERS)
        COMBO(cd_cag_nav,       LHR LHM LBI L1,  &mc_cag_nav,            ALPHA1_LAYERS)
        COMBO(cd_cas_spc,       LHR LHM LHI L0,  &mc_cas_spc,            ALPHA1_LAYERS)

        COMBO(cd_ht_meh_spc,    LHR LHM LHI,     &ht_meh_spc 0 0,        ALPHA1_LAYERS FUN NAV_LAYERS)
        COMBO(cd_hyper_l,       LBR LBM LBI,     &th_hyper_space 0 0,    ALPHA1_LAYERS FUN NAV_LAYERS)
        COMBO(cb_hyper_r,       RBI RBM RBR,     &th_hyper_h 0 0,        ALPHA1_LAYERS)

        COMBO(cb_esc_save,      LTR LTM L0,      &mc_save_esc,           ALPHA1_LAYERS)

        COMBO(cb_semi,          RBM RBR,         &th_semi 0 0,           ALPHA1_LAYERS LOWER_LAYERS)
        COMBO(cb_sent,          RBI RBM RBR,     &mc_end_semi_ent,       LOWER_LAYERS)

        COMBO(cb_k,             LTM LTI,         &kp K,                  ALPHA1 PLAIN1)
        COMBO(cb_w,             LHM LHI,         &ht_w 0 0,              ALPHA1 PLAIN1)
        COMBO(cb_v,             LBI LBM,         &kp V,                  ALPHA1 PLAIN1)
        COMBO(cb_q,             LHR LHM,         &ht_q 0 0,              ALPHA1 PLAIN1)

        COMBO(cb_kc,            LTM LTI,         &kp LS(K),              CASE_A1 CPLK_A1)
        COMBO(cb_wc,            LHM LHI,         &kp LS(W),              CASE_A1 CPLK_A1)
        COMBO(cb_vc,            LBI LBM,         &kp LS(V),              CASE_A1 CPLK_A1)
        COMBO(cb_qc,            LHR LHM,         &kp LS(Q),              CASE_A1 CPLK_A1)

        COMBO(cb_x,             RTI RTM,         &kp X,                  ALPHA1 PLAIN1)
        COMBO(cb_z,             RHI RHM,         &ht_z 0 0,              ALPHA1 PLAIN1)
        COMBO(cb_j,             RBI RBM,         &kp J,                  ALPHA1 PLAIN1)
        COMBO(cb_y,             RHM RHR,         &ht_y 0 0,              ALPHA1 PLAIN1)
        COMBO(cb_d,             RTI RTM RTR,     &kp D,                  ALPHA1 PLAIN1)
        COMBO(cb_p,             RHI RHM RHR,     &ht_p 0 0,              ALPHA1 PLAIN1)

        COMBO(cb_xc,            RTI RTM,         &kp LS(X),              CASE_A1 CPLK_A1)
        COMBO(cb_zc,            RHI RHM,         &kp LS(Z),              CASE_A1 CPLK_A1)
        COMBO(cb_jc,            RBI RBM,         &kp LS(J),              CASE_A1 CPLK_A1)
        COMBO(cb_yc,            RHM RHR,         &kp LS(Y),              CASE_A1 CPLK_A1)
        COMBO(cb_dc,            RTI RTM RTR,     &kp LS(D),              CASE_A1 CPLK_A1)
        COMBO(cb_pc,            RHI RHM RHR,     &kp LS(P),              CASE_A1 CPLK_A1)

        COMBO(cb_meh_k,         LTI LTM,         &mc_meh_k,              MEHS)
        COMBO(cb_meh_w,         LHI LHM,         &mc_meh_w,              MEHS)
        COMBO(cb_meh_v,         LBI LBM,         &mc_meh_v,              MEHS)
        COMBO(cb_meh_x,         RTI RTM,         &mc_meh_x,              MEHS)
        COMBO(cb_meh_z,         RHI RHM,         &mc_meh_z,              MEHS)
        COMBO(cb_meh_j,         RBI RBM,         &mc_meh_j,              MEHS)
        COMBO(cb_meh_q,         LHR LHM,         &mc_meh_q,              MEHS)
        COMBO(cb_meh_y,         RHR RHM,         &mc_meh_y,              MEHS)
        COMBO(cb_lower_cl,      LBM LBR,         &tc_num_word_cp,        MEHS)
        COMBO(cb_lower_cr,      RBM RBR,         &tc_num_word_cp,        MEHS)
        COMBO(cd_meh_spc,       LHR LHM LHI,     &mc_meh_space,          MEHS)
        COMBO(cd_hyp_spc,       LBR LBM LBI,     &mc_hyper_space,        MEHS)

        COMBO(cb_comm,          RHP R0,          &kp COMMA,              LOWER_LAYERS)
        COMBO(cb_sfl,            RTI RTM,         &kp LS(L),              LOWER_LAYERS)
        COMBO(cb_jv,            RHI RHM,         &kp A,                  LOWER_LAYERS)
        COMBO(cb_pipev,         RBI RBM,         &kp PIPE,               LOWER_LAYERS)
        COMBO(cb_kv,            RHM RHR,         &kp E,                  LOWER_LAYERS)

        COMBO(cb_braces_new,    LTR LTM,         &mc_braces_new,         LOWER_LAYERS)
        COMBO(cb_pars,          LHR LHM,         &th_pars 0 0,           LOWER_LAYERS)
        COMBO(cb_brackets,      LBR LBM,         &th_brackets NAV 0,     LOWER_LAYERS)
        COMBO(cb_colon_colon,   LTM LTI,         &th_dcolon 0 0,         LOWER_LAYERS)
        COMBO(cb_and,           LHI LHM,         &th_and 0 0,            LOWER_LAYERS)
        COMBO(cb_or,            LBI LBM,         &th_or 0 0,             LOWER_LAYERS)
        COMBO(cb_par_semi,      RHR RHM RHI,     &mc_pars_semi_ent,      LOWER_LAYERS)

        COMBO(cd_meh_l,         LHR LHM LHI,     &th_ord_o 0 0,          LOWER_LAYERS)
        COMBO(cd_hyper_n,       LBR LBM LBI,     &th_ord_a 0 0,          LOWER_LAYERS)

        COMBO(cb_dhash,         LTR LTM,         &mc_dhash,              RAISE_LAYERS)
        COMBO(cb_sarrow,        LHR LHM,         &mc_sarrow,             RAISE_LAYERS)
        COMBO(cb_darrow,        LBR LBM,         &mc_darrow,             RAISE_LAYERS)
        COMBO(cb_thash,         LTR LTM LTI,     &mc_thash,              RAISE_LAYERS)
        COMBO(cb_tdqo,          LHR LHM LHI,     &th_tdqo 0 0,           RAISE_LAYERS)
        COMBO(cb_tbti,          LBR LBM LBI,     &th_tbti 0 0,           RAISE_LAYERS)
        COMBO(cb_dsqo,          LTM LTI,         &mc_dsqo,               RAISE_LAYERS)
        COMBO(cb_ddqo,          LHM LHI,         &mc_ddqo,               RAISE_LAYERS)
        COMBO(cb_dbti,          LBM LBI,         &mc_dbti,               RAISE_LAYERS)
        COMBO(cb_us,            RTR RTM RTI,     &th_us 0 0,             RAISE_LAYERS)
        COMBO(cb_br,            RHR RHM RHI,     &th_br 0 0,             RAISE_LAYERS)
        COMBO(cb_eu,            RBR RBM RBI,     &th_eur 0 0,            RAISE_LAYERS)

        COMBO(cb_ds,            RTI RTM,         &mc_ds,                 RAISE_LAYERS)
        COMBO(cb_eqeq,          RHM RHR,         &mc_eqeq,               RAISE_LAYERS)
        COMBO(cb_noteq,         RBM RBR,         &mc_noteq,              RAISE_LAYERS)
        COMBO(cb_tisl,          RHI RHM,         &mc_tisl,               RAISE_LAYERS)
        COMBO(cb_dds,           RBI RBM,         &mc_dds,                RAISE_LAYERS)

        COMBO(cb_f10,           RBM RBI,         &kp F10,                FUN)
        COMBO(cb_f11,           RHM RHI,         &kp F11,                FUN)
        COMBO(cb_f12,           RTM RTI,         &kp F12,                FUN)
        COMBO(cb_f13,           RBM RBR,         &kp F13,                FUN)
        COMBO(cb_f14,           RHM RHR,         &kp F14,                FUN)
        COMBO(cb_f15,           RTM RTR,         &kp F15,                FUN)

        COMBO(cb_lpar,          RHI RHM RHR,     &kp LPAR,               ALPHA2_LAYERS)
        COMBO(cb_rpar,          RBI RBM RBR,     &kp RPAR,               ALPHA2_LAYERS)
        COMBO(cb_dqo,           RTI RTM RTR,     &mc_dqo,                ALPHA2_LAYERS)
        COMBO(cb_minus,         RTI RTM,         &kp MINUS,              ALPHA2_LAYERS)
        COMBO(cb_dqo_s,         LTM LTI,         &kp DQT,                ALPHA2_LAYERS)
        COMBO(cb_sqo_s,         LHM LHI,         &kp SQT,                ALPHA2_LAYERS)
        COMBO(cb_bti_s,         LBM LBR,         &kp GRAVE,              ALPHA2_LAYERS)
        COMBO(cb_caret_s,       LHR LHM,         &kp CARET,              ALPHA2_LAYERS)
        COMBO(cb_tilde_s,       LBI LBM,         &kp TILDE,              ALPHA2_LAYERS)
        COMBO(cb_ques,          RHI RHM,         &mc_qmark,              ALPHA2_LAYERS)
        COMBO(cb_excl,          RBI RBM,         &mc_excl,               ALPHA2_LAYERS)
        COMBO(cb_unds,          RBM RBR,         &kp UNDERSCORE,         ALPHA2_LAYERS)

        COMBO(cb_grva,          RHM RHR,         &ac_agrv,               ALPHA2)
        COMBO(cb_grvas,         RHM RHR,         &ac_agrv_s,             SFT_A2)
        COMBO(cb_grvac,         RHM RHR,         &ac_agrv_c,             CASE_A2)

        COMBO(cb_o_esc,         RHI RHM,         &mc_o_esc,              TEXT)
        COMBO(cb_sft_o_esc,     RHM RHR,         &mc_sft_o_esc,          TEXT)
        COMBO(cb_dqt0p,         RHI RHM RHR,     &mc_dqt0p,              TEXT)
        COMBO(cb_v_r,           RBI RBM RBR,     &kp V,                  TEXT)
        COMBO(cb_shiftv,        RBM RBR,         &kp LS(V),              TEXT)
        COMBO(cb_ctrlv,         RBI RBM,         &kp LC(V),              TEXT)

        COMBO(cb_lower_nav,     LBR LBM,         &mo LOW_CP,             NAV_LAYERS)
        COMBO(cd_ca,            LHR LHM,         &kp LC(LALT),           NAV_LAYERS)

        COMBO(cb_down_home,     RBI RBM,         &mc_down_home,          NAV_LAYERS)
        COMBO(cb_down_end,      RBR RBM,         &mc_down_end,           NAV_LAYERS)
        COMBO(cb_up_end_del,    RTM RTI,         &mc_up_end_del,         NAV_LAYERS)
        COMBO(cb_page_down,     RHM RHI,         &kp PAGE_DOWN,          NAV_LAYERS)
        COMBO(cb_page_up,       RHM RHR,         &kp PAGE_UP,            NAV_LAYERS)

        COMBO(cb_lclick,        RHM RHI,         &mkp LCLK,              MEDIA)
        COMBO(cb_rclick,        RHM RHR,         &mkp RCLK,              MEDIA)
    };

    combo_must_tap {
        MACRO(mc_lshift_lshift    , &macro_tap &kp LSFT &kp LSFT)
        MACRO(mc_lctrl_lctrl      , &macro_tap &kp LCTL &kp LCTL)
        MACRO(mc_lalt_lalt        , &macro_tap &kp LALT &kp LALT)
        MACRO(mc_ralt_ralt        , &macro_tap &kp LALT &kp LALT)
        MACRO(mc_lgui_lgui        , &macro_tap &kp LGUI &kp LGUI)

        MACRO(mc_ca_nav           , &macro_press &kp LCTL &kp LALT &mo NAV &macro_pause_for_release &macro_release &mo NAV &kp LCTL &kp LALT)
        MACRO(mc_gcs_nav          , &macro_press &kp LGUI &kp LCTL &kp LSFT &mo NAV &macro_pause_for_release &macro_release &mo NAV &kp LGUI &kp LCTL &kp LSFT)
        MACRO(mc_cag_nav          , &macro_press &kp LCTL &kp LALT &kp LGUI &mo NAV &macro_pause_for_release &macro_release &mo NAV &kp LCTL &kp LALT &kp LGUI)
        MACRO(mc_cas_spc          , &macro_press &kp LCTL &kp LALT &kp LSFT &mo LOWER &macro_pause_for_release &macro_release &mo LOWER &kp LCTL &kp LALT &kp LSFT)

        COMBO_MUST_TAP(ht_w       , &kp LSFT  &kp LALT          , &kp W)
        COMBO_MUST_TAP(ht_q       , &kp LCTL  &kp LALT          , &kp Q)
        COMBO_MUST_TAP(ht_z       , &kp LSFT  &kp LALT          , &kp Z)
        COMBO_MUST_TAP(ht_y       , &kp LALT  &kp LCTL          , &kp Y)
        COMBO_MUST_TAP(ht_meh_spc , &kp LCTL &kp LALT &kp LSFT  , &mc_meh_space)
        COMBO_MUST_TAP(ht_p       , &kp LCTL &kp LALT &kp LSFT  , &kp P)
    };
};