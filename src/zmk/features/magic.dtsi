/*
*
* Copyright (c) 2022 Rafael Rom√£o
* SPDX-License-Identifier: MIT
*
*/

/ {
    magic {
        
        // ******************** REPEAT KEY ******************** //

        labeled_key_repeat: labeled_key_repeat {
			compatible = "zmk,behavior-macro";
            label = "labeled_key_repeat";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&macro_tap &key_repeat>;
        };

        alternate_repeat_key: alternate_repeat_key {
            compatible = "zmk,behavior-antecedent-morph";
            label = "alternate_repeat_key";
            #binding-cells = <0>;
            max-delay-ms = <ADAPTIVE_KEY_TIMEOUT>;
            defaults = <&labeled_key_repeat>;
            antecedents = <
                            A            I            QU_TERM      AGRV_TERM     SQUO_TERM      J            CCED_TERM      AACU_TERM      EACU_TERM      OACU_TERM   \
                                         Y            C_QU_TERM    C_AGRV_TERM   C_SQUO_TERM    LS(J)        C_CCED_TERM    C_AACU_TERM    C_EACU_TERM    C_OACU_TERM \
                            LS(Y)        RS(Y)        S_QU_TERM    S_AGRV_TERM   X              RS(J)        S_CCED_TERM    S_AACU_TERM    S_EACU_TERM    S_OACU_TERM \
                            OCIR_TERM    C_OCIR_TERM  S_OCIR_TERM  ATIL_TERM     C_ATIL_TERM    S_ATIL_TERM  OTIL_TERM      C_OTIL_TERM    S_OTIL_TERM    ECIR_TERM   \
                            C_ECIR_TERM  S_ECIR_TERM  UACU_TERM    C_UACU_TERM   S_UACU_TERM    IACU_TERM    C_IACU_TERM    S_IACU_TERM    LS(X)          RS(X)       \
                            CARET_TERM   H            LS(H)        V             LS(V)          RS(V)        RS(H)          \
                           >;                                                                                      
            bindings =    <                                                                                        
                            &tc_h        &mc_sqo      &ac_ecir     &mc_qu        &kp V          &ac_aacu     &sl ALPHA2     &kp X          &kp X          &kp X       \
                                         &kp D        &ac_ecir_c   &mc_qu_c      &kp LS(V)      &ac_aacu_c   &sl ALPHA2     &kp LS(X)      &kp LS(X)      &kp LS(X)   \
                            &kp LS(D)    &kp D        &ac_ecir     &mc_qu        &kp Y          &ac_aacu     &sl ALPHA2     &kp X          &kp X          &kp X       \
                            &kp L        &kp LS(L)    &kp RS(L)    &kp O         &kp LS(O)      &kp RS(O)    &kp E          &kp LS(E)      &kp RS(E)      &kp DOT     \
                            &kp DOT      &kp DOT      &kp V        &kp LS(V)     &kp RS(V)      &kp V        &kp LS(V)      &kp RS(V)      &kp LS(Y)      &kp RS(Y)   \
                            &mc_caret    &mc_bs_v     &mc_bs_c_v   &mc_bs_h      &mc_bs_c_h     &mc_bs_s_v   &mc_bs_s_h\
                           >;
        };

        ht_repeat: ht_repeat {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&mo>, <&mm_repeat>;
        };

        // ******************** MAGIC KEY ******************** //

        SMART_MACRO(tc_h, &kp H)
        SMART_MACRO(mc_bs_v, &kp BACKSPACE &kp V)
        
        labeled_h: labeled_h {
			compatible = "zmk,behavior-macro";
            label = "labeled_h";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&tc_h>;
        };

        magic_key: magic_key {
            compatible = "zmk,behavior-antecedent-morph";
            label = "magic_key";
            #binding-cells = <0>;
            max-delay-ms = <ADAPTIVE_KEY_TIMEOUT>;
            defaults = <&labeled_h>;
            antecedents = <
                           A             AACU_TERM     ATIL_TERM     ACIR_TERM     AGRV_TERM       \
                           E             EACU_TERM     ECIR_TERM     I             IACU_TERM       \
                           O             OACU_TERM     OTIL_TERM     OCIR_TERM                     \
                           U             UACU_TERM                                                 \

                           RS(A)         S_AACU_TERM   S_ATIL_TERM   S_ACIR_TERM   S_AGRV_TERM     \
                           RS(E)         S_EACU_TERM   S_ECIR_TERM   RS(I)         S_IACU_TERM     \
                           RS(O)         S_OACU_TERM   S_OTIL_TERM   S_OCIR_TERM   S_UACU_TERM     \
                           >;
            bindings =    <
                           &tc_v         &tc_v         &tc_v         &tc_v         &tc_v           \
                           &tc_v         &tc_v         &tc_v         &tc_v         &tc_v           \
                           &tc_v         &tc_v         &tc_v         &tc_v                         \
                           &tc_v         &tc_v                                                     \

                           &tc_v         &tc_v         &tc_v         &tc_v         &tc_v           \
                           &tc_v         &tc_v         &tc_v         &tc_v         &tc_v           \
                           &tc_v         &tc_v         &tc_v         &tc_v         &tc_v           \
                           >; 
        };

        SMART_MACRO(tc_h_c, &kp LS(H))
        SMART_MACRO(mc_bs_c_v, &kp BACKSPACE &kp LS(V))
        SMART_MACRO(mc_bs_s_v, &kp BACKSPACE &kp RS(V))

        labeled_h_c: labeled_h_c {
			compatible = "zmk,behavior-macro";
            label = "labeled_h_c";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&macro_tap &tc_h_c>;
        };

        magic_key_c: magic_key_c {
            compatible = "zmk,behavior-antecedent-morph";
            label = "magic_key_c";
            #binding-cells = <0>;
            max-delay-ms = <ADAPTIVE_KEY_TIMEOUT>;
            defaults = <&labeled_h_c>;
            antecedents = <
                           LS(A)         C_AACU_TERM   C_ATIL_TERM   C_ACIR_TERM   C_AGRV_TERM     \
                           LS(E)         C_EACU_TERM   C_ECIR_TERM   LS(I)         C_IACU_TERM     \
                           LS(O)         C_OACU_TERM   C_OTIL_TERM   C_OCIR_TERM                   \
                           LS(U)         C_UACU_TERM                                               \

                           RS(A)         S_AACU_TERM   S_ATIL_TERM   S_ACIR_TERM   S_AGRV_TERM     \
                           RS(E)         S_EACU_TERM   S_ECIR_TERM   RS(I)         S_IACU_TERM     \
                           RS(O)         S_OACU_TERM   S_OTIL_TERM   S_OCIR_TERM   S_UACU_TERM     \
                           >;
            bindings =    <
                           &kp LS(V)     &kp LS(V)     &kp LS(V)     &kp LS(V)     &kp LS(V)       \
                           &kp LS(V)     &kp LS(V)     &kp LS(V)     &kp LS(V)     &kp LS(V)       \
                           &kp LS(V)     &kp LS(V)     &kp LS(V)     &kp LS(V)                     \
                           &kp LS(V)     &kp LS(V)                                                 \

                           &kp RS(V)     &kp RS(V)     &kp RS(V)     &kp RS(V)     &kp RS(V)       \
                           &kp RS(V)     &kp RS(V)     &kp RS(V)     &kp RS(V)     &kp RS(V)       \
                           &kp RS(V)     &kp RS(V)     &kp RS(V)     &kp RS(V)     &kp RS(V)       \
                           >;
        };

        ht_magic: ht_magic {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&kp>, <&magic_key>;
        };

        ht_magic_c: ht_magic_c {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&kp>, <&magic_key_c>;
        };

        // ******************** REVERSED MAGIC KEY ******************** //

        SMART_MACRO(tc_v, &kp V)
        SMART_MACRO(mc_bs_h, &kp BACKSPACE &kp H)

        labeled_v: labeled_v {
			compatible = "zmk,behavior-macro";
            label = "labeled_v";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&tc_v>;
        };

        reversed_magic: reversed_magic {
            compatible = "zmk,behavior-antecedent-morph";
            label = "reversed_magic";
            #binding-cells = <0>;
            max-delay-ms = <ADAPTIVE_KEY_TIMEOUT>;
            defaults = <&labeled_v>;
            antecedents = <
                           A             AACU_TERM     E             EACU_TERM     ECIR_TERM   \
                           I             IACU_TERM     O             OACU_TERM                 \
                           U             UACU_TERM                                             \

                           RS(A)         S_AACU_TERM   RS(E)         S_EACU_TERM   S_ECIR_TERM \
                           RS(I)         S_IACU_TERM   RS(O)         S_OACU_TERM               \
                           RS(U)         S_UACU_TERM                                           \
                           >;
            bindings =    <
                           &tc_h         &tc_h         &tc_h         &tc_h         &tc_h       \
                           &tc_h         &tc_h         &tc_h         &tc_h                     \
                           &tc_h         &tc_h                                                 \

                           &tc_h         &tc_h         &tc_h         &tc_h         &tc_h       \
                           &tc_h         &tc_h         &tc_h         &tc_h         &tc_h       \
                           &tc_h         &tc_h                                                 \
                           >;
        };

        SMART_MACRO(tc_v_c, &kp LS(V))
        SMART_MACRO(mc_bs_c_h, &kp BACKSPACE &kp LS(H))
        SMART_MACRO(mc_bs_s_h, &kp BACKSPACE &kp RS(H))

        labeled_v_c: labeled_v_c {
			compatible = "zmk,behavior-macro";
            label = "labeled_v_c";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&macro_tap &tc_v_c>;
        };

        reversed_magic_c: reversed_magic_c {
            compatible = "zmk,behavior-antecedent-morph";
            label = "reversed_magic_c";
            #binding-cells = <0>;
            max-delay-ms = <ADAPTIVE_KEY_TIMEOUT>;
            defaults = <&labeled_v_c>;
            antecedents = <
                           LS(A)         C_AACU_TERM   LS(E)         C_EACU_TERM   C_ECIR_TERM \
                           LS(I)         C_IACU_TERM   LS(O)         C_OACU_TERM   C_OCIR_TERM \
                           LS(U)         C_UACU_TERM                                           \

                           RS(A)         S_AACU_TERM   RS(E)         S_EACU_TERM   S_ECIR_TERM \
                           RS(I)         S_IACU_TERM   RS(O)         S_OACU_TERM               \
                           RS(U)         S_UACU_TERM                                           \
                           >;
            bindings =    <
                           &kp LS(H)     &kp LS(H)     &kp LS(H)     &kp LS(H)     &kp LS(H)   \
                           &kp LS(H)     &kp LS(H)     &kp LS(H)     &kp LS(H)     &kp LS(H)   \
                           &kp LS(H)     &kp LS(H)                                             \

                           &kp RS(H)     &kp RS(H)     &kp RS(H)     &kp RS(H)     &kp RS(H)   \
                           &kp RS(H)     &kp RS(H)     &kp RS(H)     &kp RS(H)     &kp RS(H)   \
                           &kp RS(H)     &kp RS(H)                                             \
                           >;
        };

    };
};