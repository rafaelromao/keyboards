/*
*
* Copyright (c) 2022 Rafael Rom√£o
* SPDX-License-Identifier: MIT
*
*/

/ {
    #define SMART_LAYERTAP(NAME, BINDINGS) \
         NAME: NAME { \
            compatible = "zmk,behavior-hold-tap"; \
            #binding-cells = <2>; \
            tapping-term-ms = <QUICK_TAP_TERM>; \
            flavor = "tap-preferred"; \
            quick-tap-ms = <0>; \
            bindings = <&mo>, <BINDINGS>; \
        };

    #define SMART_MACRO(NAME, BINDINGS) \
        NAME: NAME { \
			compatible = "zmk,behavior-macro"; \
            #binding-cells = <0>; \
            wait-ms = <10>; \
            tap-ms = <10>; \
            bindings = <&macro_tap BINDINGS>; \
        };

    #define SMART_MORPH(NAME, MODS, MODDED, UNMODDED) \
        NAME: NAME { \
            compatible = "zmk,behavior-mod-morph"; \
            #binding-cells = <0>; \
            bindings = <UNMODDED>, <MODDED>; \
            mods = <(MODS)>; \
        };

    smart {
        
        // ********************** CUSTOM HOLD TAPS ********************** //

        ltn: layer-tap-no-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&mo>, <&kp>;
        };
        msl: layer-tap-with-stick-layer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&mo>, <&sl>;
        };
        msk: layer-tap-with-stick-key {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&mo>, <&sk>;
        };
        mst: layer-tap-with-tog-key {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&mo>, <&tog>;
        };

        // ********************** SENTENCE CASE ********************** //

        tc_cancel: tc_cancel {
			compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp K_CANCEL &to ALPHA1>;
        };
        SMART_MACRO(tc_sp_ns,         &kp SPACE &sl SEN_E1)
        SMART_MACRO(tc_nsen,          &sl SEN_E1)
        SMART_LAYERTAP(th_sp_ns,      &tc_sp_ns)
        SMART_LAYERTAP(th_cancel,     &tc_cancel)
        SMART_LAYERTAP(th_nsen,       &tc_nsen)

        // ********************** SMART PLAIN ALPHAS ********************** //

        smart_plain1: smart_plain1 {
            // compatible = "zmk,behavior-auto-layer";
            compatible = "zmk,behavior-caps-word";
            ignore-alphas;
            ignore-modifiers;
			#binding-cells = <0>;
            layers = <PLAIN1>;
            continue-list = <UNDERSCORE MINUS BACKSPACE DELETE SQT TILDE CARET GRAVE SPACE>;
        };

        SMART_MACRO(tc_smart_plain1, &smart_plain1)

        SMART_MACRO(mc_plain2, &sl PLAIN2)
        SMART_MACRO(mc_shifted_plain2, &sl SFT_PLAIN2)
        SMART_MORPH(mm_plain2_sft_plain2, MOD_LSFT|MOD_RSFT, &mc_shifted_plain2, &mc_plain2)

        msl_p2: msl_p2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&mo>, <&mm_plain2_sft_plain2>;
        };

        // ********************** NUM WORD ********************** //

        smart_num: smart_num {
            // compatible = "zmk,behavior-auto-layer";
            compatible = "zmk,behavior-caps-word";
            ignore-numbers;
			#binding-cells = <0>;
            layers = <LOWER>;
            continue-list = <BSPC DEL DOT COMMA PLUS MINUS STAR FSLH EQUAL AMPS PIPE HASH TILDE CARET
                             LBRC RBRC BACKSLASH DOLLAR AT LPAR RPAR DQT SQT LBKT RBKT QMARK GRAVE>;
        };

        tc_num_word: tc_num_word {
			compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            // bindings = <&macro_tap &to ALPHA1 &smart_num LOWER>;
            bindings = <&macro_tap &smart_num>;
        };

        // ******************* CAPS LINE ******************* //

        smart_line: smart_line {
            // compatible = "zmk,behavior-auto-layer";
            compatible = "zmk,behavior-caps-word";
            ignore-alphas;
            ignore-modifiers;
			#binding-cells = <0>;  
            layers = <CPLK_A1>;
            continue-list = <UNDERSCORE MINUS BACKSPACE DELETE SQT TILDE CARET GRAVE SPACE>;
        };
        // terminated_caps_lock: terminated_caps_lock {
		// 	compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     wait-ms = <0>;
        //     tap-ms = <0>;
        //     bindings = <&macro_tap &kp CAPSWORD_TERM &smart_line CPLK_A1>;
        // };

        // SMART_MACRO(tc_smart_line, &smart_line CPLK_A1)
        SMART_MACRO(tc_smart_line, &smart_line)

        // ******************* CAPS WORD ******************* //

        smart_word: smart_word {
            // compatible = "zmk,behavior-auto-layer";
            compatible = "zmk,behavior-caps-word";
            ignore-alphas;
            ignore-modifiers;
            layers = <CASE_A1>;
			#binding-cells = <0>;  
            continue-list = <UNDERSCORE MINUS BACKSPACE DELETE SQT TILDE CARET GRAVE>;
        };
        // terminated_caps_word: terminated_caps_word {
		// 	compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     wait-ms = <0>;
        //     tap-ms = <0>;
        //     bindings = <&macro_tap &kp CAPSWORD_TERM &smart_word CASE_A1>;
        // };

        SMART_MACRO(tc_shift, &sk RSHFT)
        SMART_MORPH(mm_shift, MOD_LSFT|MOD_RSFT, &smart_word, &tc_shift)

        SMART_MORPH(mm_repeat, MOD_LSFT|MOD_RSFT, &smart_line, &alternate_repeat_key)

        SMART_MACRO(tc_sp_caps,     &kp LS(SPACE))
        SMART_LAYERTAP(th_sp_caps,  &tc_sp_caps)

        ht_shift: ht_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&mo>, <&mm_shift>;
        };

        // SMART_MACRO(tc_smart_word, &smart_word CASE_A1)
        SMART_MACRO(tc_smart_word, &smart_word)

        ht_caps: ht_caps {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            // bindings = <&mo>, <&terminated_caps_word>;
            bindings = <&mo>, <&tc_smart_word>;
        };

        // ******************** SMART CASES ******************** //

        SMART_MACRO(mc_alpha2, &sl ALPHA2)
        SMART_MACRO(mc_sft_a2, &sl SHIFT_A2)
        SMART_MORPH(mm_alpha2_shifted2, MOD_LSFT|MOD_RSFT, &mc_sft_a2, &mc_alpha2)

        SMART_MACRO(mc_case_a2,    &sl CASE_A2)
        SMART_LAYERTAP(th_sft_a2,  &mc_sft_a2)
        SMART_LAYERTAP(th_case_a2, &mc_case_a2)

        msl_a2: msl_a2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&mo>, <&mm_alpha2_shifted2>;
        };
        ht_sft_p2: ht_sft_p2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&mo>, <&tc_shift>;
        };


        SMART_MACRO(tc_pascal_case,  &to CAMEL_CASE &sk LSHFT)
        SMART_MACRO(tc_s_snakecase,  &tog CASE_A1 &tog SNAKE_CASE)
        SMART_MACRO(tc_s_kebabcase,  &tog CASE_A1 &tog KEBAB_CASE)
        SMART_MACRO(tc_s_slashcase,  &tog CASE_A1 &tog SLASH_CASE)

        SMART_MACRO(mc_msk_camel, &sk LSHFT)
        SMART_MACRO(mc_msk_snake, &kp UNDERSCORE &sl SPACING)
        SMART_MACRO(mc_msk_kebab, &kp MINUS &sl SPACING)
        SMART_MACRO(mc_msk_slash, &kp SLASH &sl SPACING)
        SMART_MACRO(mc_msk_space, &kp SPACE &to ALPHA1)
        SMART_MACRO(mc_msk_space_b, &kp BACKSPACE &kp SPACE &to ALPHA1)

        msk_unds: msk_unds {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&mo>, <&mc_msk_snake>;
        };

        msk_dash: msk_dash {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&mo>, <&mc_msk_kebab>;
        };

        msk_slash: msk_slash {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&mo>, <&mc_msk_slash>;
        };

        msk_spcb: msk_spcb {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&mo>, <&mc_msk_space_b>;
        };

        msk_sft: msk_sft {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&mo>, <&mc_msk_camel>;
        };

        msk_spc: msk_spc {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <QUICK_TAP_TERM>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            bindings = <&mo>, <&mc_msk_space>;
        };

    };
};